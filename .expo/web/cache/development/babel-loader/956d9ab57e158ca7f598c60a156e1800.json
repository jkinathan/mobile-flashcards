{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Styles from \"../utilities/styles\";\nimport { useSelector } from \"react-redux\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nvar DeckDetail = function DeckDetail(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var deck = route.params;\n  var specDeck = useSelector(function (state) {\n    return state;\n  });\n  var cards = 0;\n\n  if (route.params !== undefined) {\n    cards = deck.deck.questions.length;\n  }\n\n  useEffect(function () {\n    navigation.setOptions({\n      title: deck.deck.title\n    });\n  }, [specDeck]);\n  return React.createElement(View, {\n    style: Styles.main\n  }, React.createElement(Text, {\n    style: Styles.header\n  }, deck.deck.title), React.createElement(Text, {\n    style: Styles.cards\n  }, cards === 1 ? cards + \" Card\" : cards === 0 ? \"No card\" : cards + \" cards\"), React.createElement(View, {\n    style: Styles.deckOptions\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"AddCard\", {\n        deck: route.params\n      });\n    }\n  }, React.createElement(Text, {\n    style: Styles.button\n  }, \"Add Card\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"StartQuiz\", {\n        deck: route.params.deck\n      });\n    }\n  }, React.createElement(Text, {\n    style: Styles.button\n  }, \"Start Quiz\"))));\n};\n\nexport default DeckDetail;","map":{"version":3,"sources":["/home/kinathan/Desktop/retribution/mobile-flashcards/components/DeckDetail.js"],"names":["React","Styles","useSelector","useDispatch","useEffect","DeckDetail","route","navigation","dispatch","deck","params","specDeck","state","cards","undefined","questions","length","setOptions","title","main","header","deckOptions","navigate","button"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,MAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC5C,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,IAAI,GAAGH,KAAK,CAACI,MAAnB;AACA,MAAMC,QAAQ,GAAGT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAX;AAAA,GAAD,CAA5B;AAGA,MAAIC,KAAK,GAAG,CAAZ;;AAEA,MAAIP,KAAK,CAACI,MAAN,KAAiBI,SAArB,EAAgC;AAC9BD,IAAAA,KAAK,GAAGJ,IAAI,CAACA,IAAL,CAAUM,SAAV,CAAoBC,MAA5B;AACD;;AAGDZ,EAAAA,SAAS,CAAC,YAAM;AAEdG,IAAAA,UAAU,CAACU,UAAX,CAAsB;AAAEC,MAAAA,KAAK,EAAET,IAAI,CAACA,IAAL,CAAUS;AAAnB,KAAtB;AAED,GAJQ,EAIN,CAACP,QAAD,CAJM,CAAT;AAMA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACkB;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACmB;AAApB,KAA6BX,IAAI,CAACA,IAAL,CAAUS,KAAvC,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACY;AAApB,KACGA,KAAK,KAAK,CAAV,GACGA,KAAK,GAAG,OADX,GAEGA,KAAK,KAAK,CAAV,GACA,SADA,GAEAA,KAAK,GAAG,QALd,CAFF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACoB;AAApB,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMd,UAAU,CAACe,QAAX,CAAoB,SAApB,EAA+B;AAAEb,QAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd,OAA/B,CAAN;AAAA;AADX,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACsB;AAApB,gBAHF,CADF,EAME,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMhB,UAAU,CAACe,QAAX,CAAoB,WAApB,EAAiC;AAAEb,QAAAA,IAAI,EAAEH,KAAK,CAACI,MAAN,CAAaD;AAArB,OAAjC,CAAN;AAAA;AADX,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACsB;AAApB,kBAHF,CANF,CAVF,CADF;AA0BD,CA7CD;;AA+CA,eAAelB,UAAf","sourcesContent":["import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport Styles from \"../utilities/styles\";\nimport { useSelector } from \"react-redux\";\nimport { TouchableOpacity } from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\n\nconst DeckDetail = ({ route, navigation }) => {\n  const dispatch = useDispatch();\n  const deck = route.params;\n  const specDeck = useSelector((state) => state);\n\n  \n  let cards = 0;\n  \n  if (route.params !== undefined) {\n    cards = deck.deck.questions.length;\n  }\n  \n  \n  useEffect(() => {\n    \n    navigation.setOptions({ title: deck.deck.title });\n\n  }, [specDeck]);\n\n  return (\n    <View style={Styles.main}>\n      <Text style={Styles.header}>{deck.deck.title}</Text>\n      <Text style={Styles.cards}>\n        {cards === 1\n          ? cards + \" Card\"\n          : cards === 0\n          ? \"No card\"\n          : cards + \" cards\"}\n      </Text>\n\n      <View style={Styles.deckOptions}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"AddCard\", { deck: route.params })}\n        >\n          <Text style={Styles.button}>Add Card</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"StartQuiz\", { deck: route.params.deck })}\n        >\n          <Text style={Styles.button}>Start Quiz</Text>\n        </TouchableOpacity>\n        \n      </View>\n    </View>\n  );\n};\n\nexport default DeckDetail;\n"]},"metadata":{},"sourceType":"module"}