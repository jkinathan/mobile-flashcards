{"ast":null,"code":"import * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport DeckList from \"../components/DeckList\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport { TestCompo } from \"../components/TestComponent\";\nimport { orange } from \"../utilities/colors\";\nvar Tab = createBottomTabNavigator();\nexport default function MainNavigation() {\n  return React.createElement(NavigationContainer, null, React.createElement(Tab.Navigator, {\n    screenOptions: ({\n      \"tabBarActiveTintColor\": \"#f0f\",\n      \"tabBarInactiveTintColor\": \"#555\",\n      \"tabBarActiveBackgroundColor\": \"#fff\",\n      \"tabBarInactiveBackgroundColor\": \"#999\",\n      \"tabBarStyle\": [{\n        \"display\": \"flex\"\n      }, null]\n    }, function (route) {\n      return {\n        tabBarIcon: function tabBarIcon(_ref) {\n          var focused = _ref.focused,\n              size = _ref.size,\n              color = _ref.color;\n          var iconName;\n\n          if (route.name === \"DeckList\") {\n            iconName = \"autoprefixer\";\n            size = focused ? 25 : 20;\n            color = focused ? \"#f0f\" : \"#555\";\n          } else if (route.name === \"Add Deck\") {\n            iconName = \"btc\";\n            size = focused ? 25 : 20;\n            color = focused ? \"#f0f\" : \"#555\";\n          }\n\n          return React.createElement(FontAwesome5, {\n            name: iconName,\n            size: size\n          });\n        }\n      };\n    }),\n    tabBarOptions: {\n      activeTintColor: \"#f0f\",\n      style: {\n        height: 60,\n        backgroundColor: \"white\",\n        shadowColor: 'rgba(0,0,0, 0.24)',\n        shadowOffset: {\n          width: 0,\n          height: 3\n        },\n        shadowRadius: 6,\n        shadowOpacity: 1,\n        borderTopWidth: 1,\n        borderTopColor: orange\n      },\n      labelStyle: {\n        fontSize: 12,\n        fontWeight: 'bold'\n      },\n      tabStyle: {\n        marginTop: 5,\n        marginBottom: 3\n      },\n      showIcon: true\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"DeckList\",\n    component: DeckList\n  }), React.createElement(Tab.Screen, {\n    name: \"Add Deck\",\n    component: DeckList\n  })));\n}","map":{"version":3,"sources":["/home/kinathan/Desktop/retribution/mobile-flashcards/Navigations/MainNavigation.js"],"names":["React","NavigationContainer","createBottomTabNavigator","DeckList","FontAwesome5","TestCompo","orange","Tab","MainNavigation","route","tabBarIcon","focused","size","color","iconName","name","activeTintColor","style","height","backgroundColor","shadowColor","shadowOffset","width","shadowRadius","shadowOpacity","borderTopWidth","borderTopColor","labelStyle","fontSize","fontWeight","tabStyle","marginTop","marginBottom","showIcon"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAQC,QAAR;AACA,SAAQC,YAAR;AACA,SAASC,SAAT;AACA,SAASC,MAAT;AAEA,IAAMC,GAAG,GAAGL,wBAAwB,EAApC;AAGA,eAAe,SAASM,cAAT,GAA0B;AACvC,SACE,oBAAC,mBAAD,QACE,oBAAC,GAAD,CAAK,SAAL;AACC,IAAA,aAAa,GACZ;AACE,+BAAyB,MAD3B;AAEE,iCAA2B,MAF7B;AAGE,qCAA+B,MAHjC;AAIE,uCAAiC,MAJnC;AAKE,qBAAe,CACb;AACE,mBAAW;AADb,OADa,EAIb,IAJa;AALjB,OAYC,UAACC,KAAD;AAAA,aAAU;AACPC,QAAAA,UAAU,EAAE,0BAAyB;AAAA,cAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,cAAfC,IAAe,QAAfA,IAAe;AAAA,cAAVC,KAAU,QAAVA,KAAU;AACnC,cAAIC,QAAJ;;AACA,cAAGL,KAAK,CAACM,IAAN,KAAe,UAAlB,EAA6B;AAC3BD,YAAAA,QAAQ,GAAG,cAAX;AACAF,YAAAA,IAAI,GAAED,OAAO,GAAG,EAAH,GAAQ,EAArB;AACAE,YAAAA,KAAK,GAAGF,OAAO,GAAG,MAAH,GAAY,MAA3B;AACD,WAJD,MAKK,IAAGF,KAAK,CAACM,IAAN,KAAe,UAAlB,EAA6B;AAChCD,YAAAA,QAAQ,GAAG,KAAX;AACAF,YAAAA,IAAI,GAAED,OAAO,GAAG,EAAH,GAAQ,EAArB;AACAE,YAAAA,KAAK,GAAGF,OAAO,GAAG,MAAH,GAAY,MAA3B;AAED;;AACD,iBACE,oBAAC,YAAD;AACA,YAAA,IAAI,EAAIG,QADR;AAEA,YAAA,IAAI,EAAIF;AAFR,YADF;AAKD;AAnBM,OAAV;AAAA,KAbW,CADd;AA0CI,IAAA,aAAa,EAAG;AACdI,MAAAA,eAAe,EAAE,MADH;AAEdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,EADH;AAELC,QAAAA,eAAe,EAAE,OAFZ;AAGLC,QAAAA,WAAW,EAAE,mBAHR;AAILC,QAAAA,YAAY,EAAE;AACZC,UAAAA,KAAK,EAAE,CADK;AAEZJ,UAAAA,MAAM,EAAE;AAFI,SAJT;AAQLK,QAAAA,YAAY,EAAE,CART;AASLC,QAAAA,aAAa,EAAE,CATV;AAULC,QAAAA,cAAc,EAAE,CAVX;AAWLC,QAAAA,cAAc,EAAEpB;AAXX,OAFO;AAedqB,MAAAA,UAAU,EAAE;AACVC,QAAAA,QAAQ,EAAE,EADA;AAEVC,QAAAA,UAAU,EAAE;AAFF,OAfE;AAmBdC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,SAAS,EAAE,CADH;AAERC,QAAAA,YAAY,EAAE;AAFN,OAnBI;AAuBdC,MAAAA,QAAQ,EAAE;AAvBI;AA1CpB,KAqEE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,SAAS,EAAE9B;AAAvC,IArEF,EAsEE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,SAAS,EAAEA;AAAvC,IAtEF,CADF,CADF;AA4ED","sourcesContent":["import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport  DeckList  from '../components/DeckList';\nimport {FontAwesome5} from 'react-native-vector-icons';\nimport { TestCompo } from '../components/TestComponent';\nimport { orange } from '../utilities/colors';\n\nconst Tab = createBottomTabNavigator();\n\n\nexport default function MainNavigation() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n       screenOptions={\n        {\n          \"tabBarActiveTintColor\": \"#f0f\",\n          \"tabBarInactiveTintColor\": \"#555\",\n          \"tabBarActiveBackgroundColor\": \"#fff\",\n          \"tabBarInactiveBackgroundColor\": \"#999\",\n          \"tabBarStyle\": [\n            {\n              \"display\": \"flex\"\n            },\n            null\n          ]\n        },\n         (route)=>({\n            tabBarIcon: ({focused,size,color}) =>{\n              let iconName;\n              if(route.name === \"DeckList\"){\n                iconName = \"autoprefixer\";\n                size= focused ? 25 : 20; \n                color = focused ? \"#f0f\" : \"#555\"; \n              }\n              else if(route.name === \"Add Deck\"){\n                iconName = \"btc\" ;\n                size= focused ? 25 : 20; \n                color = focused ? \"#f0f\" : \"#555\";\n\n              }\n              return(\n                <FontAwesome5\n                name = {iconName}\n                size = {size}/>\n              )\n            }\n         })}\n          // tabBarOptions = {{\n          //   activeTintColor: \"#f0f\",\n          //   inactiveTintColor: \"#555\",\n          //   activeBackgroundColor: \"#fff\",\n          //   inactiveBackgroundColor: \"#999\",\n            \n          // }}\n          tabBarOptions= {{\n            activeTintColor: \"#f0f\",\n            style: {\n              height: 60,\n              backgroundColor: \"white\",\n              shadowColor: 'rgba(0,0,0, 0.24)',\n              shadowOffset: {\n                width: 0,\n                height: 3\n              },\n              shadowRadius: 6,\n              shadowOpacity: 1,\n              borderTopWidth: 1,\n              borderTopColor: orange\n            },\n            labelStyle: {\n              fontSize: 12,\n              fontWeight: 'bold'\n            },\n            tabStyle: {\n              marginTop: 5,\n              marginBottom: 3\n            },\n            showIcon: true\n          }}\n         >\n\n        <Tab.Screen name=\"DeckList\" component={DeckList} />\n        <Tab.Screen name=\"Add Deck\" component={DeckList} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}