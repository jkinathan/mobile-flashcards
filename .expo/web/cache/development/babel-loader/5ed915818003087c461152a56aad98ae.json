{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { handleInitialData } from \"../actions/action\";\nimport { blue, orange } from \"../utilities/colors\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Deck from \"./Deck\";\nexport default function DeckList(props) {\n  var dispatch = useDispatch();\n  var decks = useSelector(function (state) {\n    return state;\n  });\n\n  var _React$useReducer = React.useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      ignored = _React$useReducer2[0],\n      forceUpdate = _React$useReducer2[1];\n\n  function handleClick() {\n    forceUpdate();\n  }\n\n  React.useEffect(function () {\n    dispatch(handleInitialData());\n    console.log(\"decks my\", decks);\n  }, []);\n  return React.createElement(ScrollView, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Udacity Mobile Flashcards\"), decks === undefined ? \"Data Is Null\" : Object.values(decks).map(function (deckk) {\n    return React.createElement(TouchableOpacity, {\n      key: deckk.title,\n      onPress: function onPress() {\n        return props.navigation.navigate(\"DeckDetail\", {\n          deck: deckk\n        });\n      }\n    }, React.createElement(Deck, {\n      id: deckk.title\n    }));\n  }), React.createElement(View, {\n    style: {\n      marginBottom: 30\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 16,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    backgroundColor: blue\n  },\n  title: {\n    fontSize: 40,\n    textAlign: 'center',\n    marginBottom: 16,\n    color: orange\n  }\n});","map":{"version":3,"sources":["/home/kinathan/Desktop/retribution/mobile-flashcards/components/DeckList.js"],"names":["React","useSelector","useDispatch","handleInitialData","blue","orange","Deck","DeckList","props","dispatch","decks","state","useReducer","x","ignored","forceUpdate","handleClick","useEffect","console","log","styles","container","title","undefined","Object","values","map","deckk","navigation","navigate","deck","marginBottom","StyleSheet","create","flex","paddingTop","paddingLeft","paddingRight","paddingBottom","backgroundColor","fontSize","textAlign","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT;AACA,SAASC,IAAT,EAAeC,MAAf;;;;;;AAEA,OAAOC,IAAP;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEnC,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAMQ,KAAK,GAAGT,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAJ;AAAA,GAAN,CAAzB;;AAEA,0BAA+BX,KAAK,CAACY,UAAN,CAAiB,UAAAC,CAAC;AAAA,WAAIA,CAAC,GAAG,CAAR;AAAA,GAAlB,EAA6B,CAA7B,CAA/B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,WAAhB;;AAEA,WAASC,WAAT,GAAuB;AACrBD,IAAAA,WAAW;AACZ;;AACDf,EAAAA,KAAK,CAACiB,SAAN,CAAgB,YAAM;AAClBR,IAAAA,QAAQ,CAACN,iBAAiB,EAAlB,CAAR;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBT,KAAxB;AACH,GAHD,EAGG,EAHH;AAOD,SAGI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEU,MAAM,CAACC;AAA1B,KAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,iCAFA,EAKAZ,KAAK,KAAKa,SAAV,GAAsB,cAAtB,GAAuCC,MAAM,CAACC,MAAP,CAAcf,KAAd,EAAqBgB,GAArB,CAAyB,UAAAC,KAAK,EAAI;AAEvE,WACE,oBAAC,gBAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACL,KADb;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMd,KAAK,CAACoB,UAAN,CAAiBC,QAAjB,CAA0B,YAA1B,EAAwC;AAAEC,UAAAA,IAAI,EAAEH;AAAR,SAAxC,CAAN;AAAA;AAHX,OAKE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEA,KAAK,CAACL;AAAhB,MALF,CADF;AAUD,GAZsC,CALvC,EAoBA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAES,MAAAA,YAAY,EAAE;AAAhB;AAAb,IApBA,CAHJ;AA6BH;AAED,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BZ,EAAAA,SAAS,EAAE;AACTa,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,WAAW,EAAE,EAHJ;AAITC,IAAAA,YAAY,EAAE,EAJL;AAKTC,IAAAA,aAAa,EAAE,EALN;AAMTC,IAAAA,eAAe,EAAEnC;AANR,GADkB;AAS7BkB,EAAAA,KAAK,EAAE;AACLkB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLV,IAAAA,YAAY,EAAE,EAHT;AAILW,IAAAA,KAAK,EAAErC;AAJF;AATsB,CAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleInitialData } from '../actions/action'\nimport { blue, orange } from '../utilities/colors';\nimport {ScrollView,View,Text,StyleSheet,TouchableOpacity} from 'react-native';\nimport Deck from './Deck';\n\nexport default function DeckList(props) {\n\n     const dispatch = useDispatch()\n     const decks = useSelector(state => state)\n\n     const [ignored, forceUpdate] = React.useReducer(x => x + 1, 0);\n\n     function handleClick() {\n       forceUpdate();\n     }\n     React.useEffect(() => {\n         dispatch(handleInitialData())\n         console.log(\"decks my\", decks);\n     }, [])\n\n    \n\n    return (\n        \n\n        <ScrollView style={styles.container}>\n\n        <Text style={styles.title}>Udacity Mobile Flashcards</Text>\n\n        {\n        decks === undefined ? \"Data Is Null\" : Object.values(decks).map(deckk => {\n\n          return (\n            <TouchableOpacity\n              key={deckk.title}\n              \n              onPress={() => props.navigation.navigate(\"DeckDetail\", { deck: deckk })}>\n\n              <Deck id={deckk.title} />\n\n            </TouchableOpacity>\n          );\n        })}\n        \n\n        <View style={{ marginBottom: 30 }} />\n\n      </ScrollView>\n\n      \n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 16,\n      paddingLeft: 16,\n      paddingRight: 16,\n      paddingBottom: 16,\n      backgroundColor: blue\n    },\n    title: {\n      fontSize: 40,\n      textAlign: 'center',\n      marginBottom: 16,\n      color: orange\n    }\n  });\n"]},"metadata":{},"sourceType":"module"}