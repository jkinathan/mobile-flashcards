{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { RECEIVE_DECKS, ADD_DECK, REMOVE_DECK, ADD_CARD, RESET_STORE } from \"../actions/action\";\nimport { decks as MydecksList } from \"../utilities/_Data\";\nvar initialState = {\n  decks: {}\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_DECKS:\n      return _objectSpread(_objectSpread({}, state), action.decks);\n\n    case ADD_DECK:\n      var title = action.title;\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, title, {\n        title: title,\n        questions: []\n      }));\n\n    case REMOVE_DECK:\n      var id = action.id;\n\n      var value = state[id],\n          remainingDecks = _objectWithoutProperties(state, [id].map(_toPropertyKey));\n\n      console.log(remainingDecks);\n      return remainingDecks;\n\n    case ADD_CARD:\n      var deckId = action.deckId,\n          card = action.card;\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, deckId, _objectSpread(_objectSpread({}, state[deckId]), {}, {\n        questions: _toConsumableArray(state[deckId].questions).concat(card)\n      })));\n\n    case RESET_STORE:\n      return MydecksList;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/kinathan/Desktop/retribution/mobile-flashcards/reducers/reducers.js"],"names":["RECEIVE_DECKS","ADD_DECK","REMOVE_DECK","ADD_CARD","RESET_STORE","decks","MydecksList","initialState","reducer","state","action","type","title","questions","id","value","remainingDecks","console","log","deckId","card","concat"],"mappings":";;;;;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,WAAlC,EAA+CC,QAA/C,EAAyDC,WAAzD;AACE,SAASC,KAAK,IAAIC,WAAlB;AAGA,IAAMC,YAAY,GAAG;AACnBF,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,aAAL;AACE,6CACKS,KADL,GAEKC,MAAM,CAACL,KAFZ;;AAIF,SAAKJ,QAAL;AACE,UAAQW,KAAR,GAAkBF,MAAlB,CAAQE,KAAR;AACA,6CACKH,KADL,2BAEGG,KAFH,EAEW;AACPA,QAAAA,KAAK,EAALA,KADO;AAEPC,QAAAA,SAAS,EAAE;AAFJ,OAFX;;AAOF,SAAKX,WAAL;AACE,UAAQY,EAAR,GAAeJ,MAAf,CAAQI,EAAR;;AACA,UAAcC,KAAd,GAA2CN,KAA3C,CAASK,EAAT;AAAA,UAAwBE,cAAxB,4BAA2CP,KAA3C,GAASK,EAAT;;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACA,aAAOA,cAAP;;AACF,SAAKb,QAAL;AACE,UAAQgB,MAAR,GAAyBT,MAAzB,CAAQS,MAAR;AAAA,UAAgBC,IAAhB,GAAyBV,MAAzB,CAAgBU,IAAhB;AACA,6CACKX,KADL,2BAEGU,MAFH,kCAGOV,KAAK,CAACU,MAAD,CAHZ;AAIIN,QAAAA,SAAS,EAAE,mBAAIJ,KAAK,CAACU,MAAD,CAAL,CAAcN,SAAlB,EAA6BQ,MAA7B,CAAoCD,IAApC;AAJf;;AAOA,SAAKhB,WAAL;AACE,aAAOE,WAAP;;AAEJ;AACE,aAAOG,KAAP;AAjCJ;AAmCD,CApCD;;AAuCA,eAAeD,OAAf","sourcesContent":["import { RECEIVE_DECKS, ADD_DECK, REMOVE_DECK, ADD_CARD, RESET_STORE } from '../actions/action';\n  import { decks as MydecksList } from '../utilities/_Data';\n  \n\n  const initialState = {\n    decks: {},\n  };\n\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case RECEIVE_DECKS:\n        return {\n          ...state,\n          ...action.decks\n        };\n      case ADD_DECK:\n        const { title } = action;\n        return {\n          ...state,\n          [title]: {\n            title,\n            questions: []\n          }\n        };\n      case REMOVE_DECK:\n        const { id } = action;\n        const { [id]: value, ...remainingDecks } = state;\n        console.log(remainingDecks);\n        return remainingDecks;\n      case ADD_CARD:\n        const { deckId, card } = action;\n        return {\n          ...state,\n          [deckId]: {\n            ...state[deckId],\n            questions: [...state[deckId].questions].concat(card)\n          }\n        };\n        case RESET_STORE:\n          return MydecksList;\n        \n      default:\n        return state;\n    }\n  }\n\n\n  export default reducer"]},"metadata":{},"sourceType":"module"}