{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Styles from \"../utilities/styles\";\nimport { useState } from \"react\";\nimport { addCardToDeck } from \"../actions/action\";\nimport { useDispatch } from \"react-redux\";\nimport { addCardToDeckAS } from \"../utilities/api\";\nimport DeckList from \"./DeckList\";\n\nvar AddCard = function AddCard(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var deck = route.params.deck;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      question = _useState2[0],\n      setQuestion = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      answer = _useState4[0],\n      setAnswer = _useState4[1];\n\n  var handleSubmit = function handleSubmit() {\n    dispatch(addCardToDeck(deck.deck.title, {\n      answer: answer,\n      question: question\n    }));\n    addCardToDeckAS(deck.deck.title, {\n      answer: answer,\n      question: question\n    });\n    navigation.na;\n  };\n\n  return React.createElement(View, {\n    style: Styles.main\n  }, React.createElement(Text, {\n    style: Styles.deckTexts\n  }, \"Add Question Card to: \", deck.deck.title, \" Deck\"), React.createElement(View, {\n    style: Styles.VerticalAlignCenter\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 30\n    }\n  }, React.createElement(TextInput, {\n    style: Styles.textInput,\n    value: question,\n    placeholder: \"Question\",\n    onChangeText: function onChangeText(text) {\n      return setQuestion(text);\n    }\n  })), React.createElement(View, {\n    style: {\n      marginBottom: 30\n    }\n  }, React.createElement(TextInput, {\n    style: Styles.textInput,\n    value: answer,\n    placeholder: \"Answer\",\n    onChangeText: function onChangeText(text) {\n      return setAnswer(text);\n    }\n  }))), React.createElement(TouchableOpacity, {\n    style: {\n      marginBottom: 30\n    },\n    onPress: handleSubmit\n  }, React.createElement(Text, {\n    style: Styles.button\n  }, \"Submit\")));\n};\n\nexport default AddCard;","map":{"version":3,"sources":["/home/kinathan/Desktop/retribution/mobile-flashcards/components/AddCard.js"],"names":["React","Styles","useState","addCardToDeck","useDispatch","addCardToDeckAS","DeckList","AddCard","route","navigation","dispatch","deck","params","question","setQuestion","answer","setAnswer","handleSubmit","title","na","main","deckTexts","VerticalAlignCenter","marginBottom","textInput","text","button"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT;AACA,OAAOC,QAAP;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAEzC,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAQO,IAAR,GAAiBH,KAAK,CAACI,MAAvB,CAAQD,IAAR;;AACA,kBAAgCT,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA4BZ,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOa,MAAP;AAAA,MAAeC,SAAf;;AAGA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEzBP,IAAAA,QAAQ,CAACP,aAAa,CAACQ,IAAI,CAACA,IAAL,CAAUO,KAAX,EAAkB;AAAEH,MAAAA,MAAM,EAAEA,MAAV;AAAkBF,MAAAA,QAAQ,EAAEA;AAA5B,KAAlB,CAAd,CAAR;AAEAR,IAAAA,eAAe,CAACM,IAAI,CAACA,IAAL,CAAUO,KAAX,EAAkB;AAAEH,MAAAA,MAAM,EAAEA,MAAV;AAAkBF,MAAAA,QAAQ,EAAEA;AAA5B,KAAlB,CAAf;AAEAJ,IAAAA,UAAU,CAACU,EAAX;AAED,GARD;;AAUA,SAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACmB;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACoB;AAApB,+BAAsDV,IAAI,CAACA,IAAL,CAAUO,KAAhE,UADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACqB;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AAAb,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEtB,MAAM,CAACuB,SADhB;AAEE,IAAA,KAAK,EAAEX,QAFT;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,YAAY,EAAE,sBAACY,IAAD;AAAA,aAAUX,WAAW,CAACW,IAAD,CAArB;AAAA;AAJhB,IADF,CADF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEF,MAAAA,YAAY,EAAE;AAAhB;AAAb,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEtB,MAAM,CAACuB,SADhB;AAEE,IAAA,KAAK,EAAET,MAFT;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,YAAY,EAAE,sBAACU,IAAD;AAAA,aAAUT,SAAS,CAACS,IAAD,CAAnB;AAAA;AAJhB,IADF,CAVF,CAFF,EAqBE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAAEF,MAAAA,YAAY,EAAE;AAAhB,KAAzB;AAA+C,IAAA,OAAO,EAAEN;AAAxD,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACyB;AAApB,cADF,CArBF,CAFF;AA4BD,CA9CD;;AAgDA,eAAenB,OAAf","sourcesContent":["import React from \"react\";\nimport { View, Text, TextInput, TouchableOpacity } from \"react-native\";\nimport Styles from \"../utilities/styles\";\nimport { useState } from \"react\";\nimport { addCardToDeck } from \"../actions/action\";\nimport { useDispatch } from \"react-redux\";\nimport { addCardToDeckAS } from \"../utilities/api\";\nimport DeckList from \"./DeckList\";\n\nconst AddCard = ({ route, navigation }) => {\n  \n  const dispatch = useDispatch();\n  const { deck } = route.params;\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n\n  // console.log(\"Decker mine\",route.params)\n  const handleSubmit = () => {\n\n    dispatch(addCardToDeck(deck.deck.title, { answer: answer, question: question }));\n\n    addCardToDeckAS(deck.deck.title, { answer: answer, question: question });\n    \n    navigation.na\n\n  };\n\n  return (\n\n    <View style={Styles.main}>\n      <Text style={Styles.deckTexts}>Add Question Card to: {deck.deck.title} Deck</Text>\n      <View style={Styles.VerticalAlignCenter}>\n        <View style={{ marginBottom: 30 }}>\n          <TextInput\n            style={Styles.textInput}\n            value={question}\n            placeholder=\"Question\"\n            onChangeText={(text) => setQuestion(text)}\n          />\n        </View>\n\n        <View style={{ marginBottom: 30 }}>\n          <TextInput\n            style={Styles.textInput}\n            value={answer}\n            placeholder=\"Answer\"\n            onChangeText={(text) => setAnswer(text)}\n          />\n        </View>\n      </View>\n      <TouchableOpacity style={{ marginBottom: 30 }} onPress={handleSubmit}>\n        <Text style={Styles.button}>Submit</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default AddCard;\n"]},"metadata":{},"sourceType":"module"}