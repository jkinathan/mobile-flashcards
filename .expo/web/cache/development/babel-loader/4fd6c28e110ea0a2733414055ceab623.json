{"ast":null,"code":"import * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport DeckList from \"../components/DeckList\";\nimport AddDeck from \"../components/AddDeck\";\nimport AddCard from \"../components/AddCard\";\nimport { orange } from \"../utilities/colors\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport DeckDetail from \"../components/DeckDetail\";\nimport StartQuiz from \"../components/Quiz\";\nimport { Ionicons } from '@expo/vector-icons';\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nfunction DeckListStackScreen() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"DeckList\"\n  }, React.createElement(Stack.Screen, {\n    name: \"DeckDetail\",\n    component: DeckDetail\n  }), React.createElement(Stack.Screen, {\n    name: \"Add Deck\",\n    component: AddDeck\n  }), React.createElement(Stack.Screen, {\n    name: \"AddCard\",\n    component: AddCard\n  }), React.createElement(Stack.Screen, {\n    name: \"StartQuiz\",\n    component: StartQuiz\n  }));\n}\n\nexport default function MainNavigation() {\n  return React.createElement(NavigationContainer, null, React.createElement(Tab.Navigator, {\n    screenOptions: ({\n      \"tabBarActiveTintColor\": \"tomato\",\n      \"tabBarInactiveTintColor\": \"gray\",\n      \"tabBarStyle\": [{\n        \"display\": \"flex\"\n      }, null]\n    }, function (_ref) {\n      var route = _ref.route,\n          navigation = _ref.navigation;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'DeckList') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Add Deck') {\n            iconName = focused ? 'add-circle' : 'add-circle-outline';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        }\n      };\n    })\n  }, React.createElement(Tab.Screen, {\n    name: \"DeckList\",\n    component: DeckListStackScreen\n  }), React.createElement(Tab.Screen, {\n    name: \"Add Deck\",\n    component: AddDeck\n  })));\n}","map":{"version":3,"sources":["/home/kinathan/Desktop/retribution/mobile-flashcards/Navigations/MainNavigation.js"],"names":["React","NavigationContainer","createBottomTabNavigator","DeckList","AddDeck","AddCard","orange","createStackNavigator","DeckDetail","StartQuiz","Ionicons","Tab","Stack","DeckListStackScreen","MainNavigation","route","navigation","tabBarIcon","focused","color","size","iconName","name"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAQC,QAAR;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AAEA,SAASC,MAAT;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,UAAP;AACA,OAAOC,SAAP;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAGA,IAAMC,GAAG,GAAGT,wBAAwB,EAApC;AACA,IAAMU,KAAK,GAAGL,oBAAoB,EAAlC;;AAIA,SAASM,mBAAT,GAA+B;AAC7B,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC;AAAlC,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,SAAS,EAAEL;AAA3C,IADF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEJ;AAAzC,IAHF,EAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEC;AAAxC,IAJF,EAKE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,SAAS,EAAEI;AAA1C,IALF,CADF;AAUD;;AAED,eAAe,SAASK,cAAT,GAA0B;AACvC,SACE,oBAAC,mBAAD,QAEE,oBAAC,GAAD,CAAK,SAAL;AACC,IAAA,aAAa,GACX;AACD,+BAAyB,QADxB;AAED,iCAA2B,MAF1B;AAGD,qBAAe,CAAC;AAAC,mBAAW;AAAZ,OAAD,EAAqB,IAArB;AAHd,OAKA;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,UAAUC,UAAV,QAAUA,UAAV;AAAA,aAA4B;AAC7BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AAC1C,cAAIC,QAAJ;;AACA,cAAIN,KAAK,CAACO,IAAN,KAAe,UAAnB,EAA+B;AAC7BD,YAAAA,QAAQ,GAAGH,OAAO,GAChB,MADgB,GAEhB,cAFF;AAGD,WAJD,MAIO,IAAIH,KAAK,CAACO,IAAN,KAAe,UAAnB,EAA+B;AACpCD,YAAAA,QAAQ,GAAGH,OAAO,GAChB,YADgB,GAEhB,oBAFF;AAGD;;AAEP,iBAAO,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAEG,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED;AAA7C,YAAP;AAES;AAf0B,OAA5B;AAAA,KANW;AADd,KA6BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,SAAS,EAAEN;AAAvC,IA7BF,EA8BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,SAAS,EAAET;AAAvC,IA9BF,CAFF,CADF;AAqCD","sourcesContent":["import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport  DeckList  from '../components/DeckList';\nimport AddDeck from '../components/AddDeck';\nimport AddCard from '../components/AddCard';\n// import {FontAwesome5} from 'react-native-vector-icons';\nimport { orange } from '../utilities/colors';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport DeckDetail from '../components/DeckDetail';\nimport StartQuiz from '../components/Quiz';\n\nimport { Ionicons } from '@expo/vector-icons';\n\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\n\n\nfunction DeckListStackScreen() {\n  return (\n    <Stack.Navigator initialRouteName=\"DeckList\">\n      <Stack.Screen name=\"DeckDetail\" component={DeckDetail} />\n      \n      <Stack.Screen name=\"Add Deck\" component={AddDeck} />\n      <Stack.Screen name=\"AddCard\" component={AddCard} />\n      <Stack.Screen name=\"StartQuiz\" component={StartQuiz} />\n\n    </Stack.Navigator>\n  );\n}\n\nexport default function MainNavigation() {\n  return (\n    <NavigationContainer>\n      \n      <Tab.Navigator\n       screenOptions={\n         {\n        \"tabBarActiveTintColor\": \"tomato\",\n        \"tabBarInactiveTintColor\": \"gray\",\n        \"tabBarStyle\": [{\"display\": \"flex\"},null]\n         },\n         ({ route, navigation }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n        if (route.name === 'DeckList') {\n          iconName = focused\n          ? 'list'\n          : 'list-outline';\n        } else if (route.name === 'Add Deck') {\n          iconName = focused\n          ? 'add-circle'\n          : 'add-circle-outline';\n        }\n  \n  return <Ionicons name={iconName} size={size} color={color} \n            />;\n          },\n          \n          })\n          \n        }\n          >\n\n        <Tab.Screen name=\"DeckList\" component={DeckListStackScreen} />\n        <Tab.Screen name=\"Add Deck\" component={AddDeck} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}