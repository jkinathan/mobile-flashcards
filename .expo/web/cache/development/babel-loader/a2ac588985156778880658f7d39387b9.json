{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from \"./reducers\";\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport DeckList from \"./components/DeckList\";\nimport AddDeck from \"./components/AddDeck\";\nimport AddCard from \"./components/AddCard\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport DeckDetail from \"./components/DeckDetail\";\nimport StartQuiz from \"./components/Quiz\";\nimport { white, azure, lightPurp, black } from \"./utilities/colors\";\nimport { Ionicons } from '@expo/vector-icons';\nvar store = createStore(reducer, applyMiddleware(thunk, logger));\nvar Tabs = createBottomTabNavigator({\n  DeckList: {\n    screen: DeckList,\n    navigationOptions: {\n      title: 'FlashCards',\n      tabBarLabel: 'Decks',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var tintColor = _ref.tintColor;\n        return React.createElement(Ionicons, {\n          name: Platform.OS === 'ios' ? 'ios-list' : 'md-list',\n          size: 30,\n          color: tintColor\n        });\n      }\n    }\n  },\n  NewDeck: {\n    screen: AddDeck,\n    navigationOptions: {\n      title: 'FlashCards',\n      tabBarLabel: 'Add Deck',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var tintColor = _ref2.tintColor;\n        return React.createElement(Ionicons, {\n          name: Platform.OS === 'ios' ? 'ios-add-circle-outline' : 'md-add-circle-outline',\n          size: 30,\n          color: tintColor\n        });\n      }\n    }\n  }\n}, {\n  tabBarOptions: {\n    activeTintColor: lightPurp,\n    style: {\n      backgroundColor: white\n    }\n  }\n});\n\nTabs.navigationOptions = function (_ref3) {\n  var navigation = _ref3.navigation;\n  var routeName = navigation.state.routes[navigation.state.index].routeName;\n  var headerTitle = routeName;\n  return {\n    headerTitle: headerTitle\n  };\n};\n\nvar MainNavigation = createStackNavigator({\n  DeckList: {\n    screen: Tabs\n  },\n  DeckDetail: {\n    screen: DeckDetail,\n    navigationOptions: {\n      headerTintColor: black,\n      headerStyle: {\n        backgroundColor: white\n      }\n    }\n  },\n  AddCard: {\n    screen: AddCard,\n    navigationOptions: {\n      headerTintColor: black,\n      headerStyle: {\n        backgroundColor: white\n      }\n    }\n  },\n  StartQuiz: {\n    screen: StartQuiz,\n    navigationOptions: {\n      headerTintColor: black,\n      headerStyle: {\n        backgroundColor: white\n      }\n    }\n  }\n}, {});\nexport default function App() {\n  return React.createElement(Provider, {\n    store: store\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(NavigationContainer, null, React.createElement(MainNavigation, null))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/kinathan/Desktop/retribution/mobile-flashcards/App.js"],"names":["StatusBar","React","createStore","applyMiddleware","Provider","reducer","thunk","logger","NavigationContainer","createBottomTabNavigator","DeckList","AddDeck","AddCard","createStackNavigator","DeckDetail","StartQuiz","white","azure","lightPurp","black","Ionicons","store","Tabs","screen","navigationOptions","title","tabBarLabel","tabBarIcon","tintColor","Platform","OS","NewDeck","tabBarOptions","activeTintColor","style","backgroundColor","navigation","routeName","state","routes","index","headerTitle","MainNavigation","headerTintColor","headerStyle","App","styles","container","StyleSheet","create","flex","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createStore, applyMiddleware } from 'redux';\n// import MainNavigation from './Navigations/MainNavigation';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport  DeckList  from './components/DeckList';\nimport AddDeck from './components/AddDeck';\nimport AddCard from './components/AddCard';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport DeckDetail from './components/DeckDetail';\nimport StartQuiz from './components/Quiz';\nimport {white , azure, lightPurp, black } from './utilities/colors'\n\nimport { Ionicons } from '@expo/vector-icons';\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk,logger)\n);\n\n\nconst Tabs = createBottomTabNavigator(\n  {\n    DeckList: {\n      screen: DeckList,\n      navigationOptions: {\n        title: 'FlashCards',\n        tabBarLabel: 'Decks',\n        tabBarIcon: ({ tintColor }) => <Ionicons name={Platform.OS === 'ios' ? 'ios-list' : 'md-list'} size={30} color={tintColor}/>\n      }\n    },\n    NewDeck: {\n      screen: AddDeck,\n      navigationOptions: {\n        title: 'FlashCards',\n        tabBarLabel: 'Add Deck',\n        tabBarIcon: ({ tintColor }) => <Ionicons name={Platform.OS === 'ios' ? 'ios-add-circle-outline' : 'md-add-circle-outline'} size={30} color={tintColor}/>\n      }\n    }\n  },\n    {\n    tabBarOptions: {\n      activeTintColor: lightPurp,\n      style: {\n        backgroundColor: white,\n      },\n    }\n  }\n);\n\nTabs.navigationOptions = ({ navigation }) => {\nconst { routeName } = navigation.state.routes[navigation.state.index];\n\nconst headerTitle = routeName;\nreturn {\n  headerTitle,\n};\n};\n\nconst MainNavigation = createStackNavigator({\n    DeckList: {\n      screen: Tabs,\n    },\n    DeckDetail: {\n      screen: DeckDetail,\n      navigationOptions: {\n        headerTintColor: black,\n        headerStyle: {\n          backgroundColor: white\n        }\n      }\n    },\n    AddCard: {\n      screen: AddCard,\n      navigationOptions: {\n        headerTintColor: black,\n        headerStyle: {\n          backgroundColor: white\n        }\n      }\n    },\n    StartQuiz: {\n      screen: StartQuiz,\n      navigationOptions: {\n        headerTintColor: black,\n        headerStyle: {\n          backgroundColor: white\n        }\n      },\n    },\n},\n{\n  \n}\n)\n\n\n\n// const Tab = createBottomTabNavigator();\n// const Stack = createStackNavigator();\n\n\n\n// function DeckListStackScreen() {\n//   return (\n//     <Stack.Navigator>\n//       <Stack.Screen name=\"DeckList\" component={DeckList} />\n//       <Stack.Screen name=\"DeckDetail\" component={DeckDetail} />\n//       <Stack.Screen name=\"Add Deck\" component={AddDeck} />\n//       <Stack.Screen name=\"AddCard\" component={AddCard} />\n//       <Stack.Screen name=\"StartQuiz\" component={StartQuiz} />\n\n//     </Stack.Navigator>\n//   );\n// }\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <View style={styles.container}>\n        \n      <NavigationContainer>\n        <MainNavigation/>\n      </NavigationContainer>\n      \n      </View>\n    </Provider>\n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}