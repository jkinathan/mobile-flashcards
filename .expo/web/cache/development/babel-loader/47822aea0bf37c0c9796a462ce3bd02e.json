{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { white, textGray } from \"../utilities/colors\";\nimport { connect } from 'react-redux';\n\nvar Deck = function Deck(props) {\n  var deck = props.deck;\n\n  if (deck === undefined) {\n    return React.createElement(View, {\n      style: styles.deckContainer\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.deckContainer\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: styles.deckText\n  }, deck.title)), React.createElement(View, null, React.createElement(Text, {\n    style: styles.cardText\n  }, deck.questions.length, \" cards\")));\n};\n\nvar styles = StyleSheet.create({\n  deckContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexBasis: 120,\n    minHeight: 120,\n    borderWidth: 1,\n    borderColor: '#aaa',\n    backgroundColor: white,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  deckText: {\n    fontSize: 28\n  },\n  cardText: {\n    fontSize: 18,\n    color: textGray\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state, _ref) {\n  var id = _ref.id;\n  var deck = state[id];\n  return {\n    deck: deck\n  };\n};\n\nexport default connect(mapStateToProps)(Deck);","map":{"version":3,"sources":["/home/kinathan/Desktop/retribution/mobile-flashcards/components/Deck.js"],"names":["React","white","textGray","connect","Deck","props","deck","undefined","styles","deckContainer","deckText","title","cardText","questions","length","StyleSheet","create","alignItems","justifyContent","flexBasis","minHeight","borderWidth","borderColor","backgroundColor","borderRadius","marginBottom","fontSize","color","mapStateToProps","state","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,KAAT,EAAgBC,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,MAAQC,IAAR,GAAiBD,KAAjB,CAAQC,IAAR;;AAEA,MAAIA,IAAI,KAAKC,SAAb,EAAwB;AACtB,WAAO,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,MAAP;AACD;;AACD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KAA+BJ,IAAI,CAACK,KAApC,CADF,CADF,EAIE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,KAA+BN,IAAI,CAACO,SAAL,CAAeC,MAA9C,WADF,CAJF,CADF;AAUD,CAhBD;;AAkBA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,aAAa,EAAE;AACbQ,IAAAA,UAAU,EAAE,QADC;AAEbC,IAAAA,cAAc,EAAE,QAFH;AAGbC,IAAAA,SAAS,EAAE,GAHE;AAIbC,IAAAA,SAAS,EAAE,GAJE;AAKbC,IAAAA,WAAW,EAAE,CALA;AAMbC,IAAAA,WAAW,EAAE,MANA;AAObC,IAAAA,eAAe,EAAEtB,KAPJ;AAQbuB,IAAAA,YAAY,EAAE,CARD;AASbC,IAAAA,YAAY,EAAE;AATD,GADgB;AAY/Bf,EAAAA,QAAQ,EAAE;AACRgB,IAAAA,QAAQ,EAAE;AADF,GAZqB;AAe/Bd,EAAAA,QAAQ,EAAE;AACRc,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,KAAK,EAAEzB;AAFC;AAfqB,CAAlB,CAAf;;AAqBA,IAAM0B,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,QAAmB;AAAA,MAATC,EAAS,QAATA,EAAS;AACzC,MAAMxB,IAAI,GAAGuB,KAAK,CAACC,EAAD,CAAlB;AAEA,SAAO;AACLxB,IAAAA,IAAI,EAAJA;AADK,GAAP;AAGD,CAND;;AAQA,eAAeH,OAAO,CAACyB,eAAD,CAAP,CAAyBxB,IAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { white, textGray } from '../utilities/colors';\nimport { connect } from 'react-redux';\n\nconst Deck = (props) => {\n  const { deck } = props;\n\n  if (deck === undefined) {\n    return <View style={styles.deckContainer} />;\n  }\n  return (\n    <View style={styles.deckContainer}>\n      <View>\n        <Text style={styles.deckText}>{deck.title}</Text>\n      </View>\n      <View>\n        <Text style={styles.cardText}>{deck.questions.length} cards</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  deckContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexBasis: 120,\n    minHeight: 120,\n    borderWidth: 1,\n    borderColor: '#aaa',\n    backgroundColor: white,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  deckText: {\n    fontSize: 28\n  },\n  cardText: {\n    fontSize: 18,\n    color: textGray\n  }\n});\n\nconst mapStateToProps = (state, { id }) => {\n  const deck = state[id];\n\n  return {\n    deck\n  };\n};\n\nexport default connect(mapStateToProps)(Deck);"]},"metadata":{},"sourceType":"module"}