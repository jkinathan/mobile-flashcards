{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getDecks } from \"../utilities/api\";\nexport var RECEIVE_DECKS = 'RECEIVE_DECKS';\nexport var ADD_DECK = 'ADD_DECK';\nexport var REMOVE_DECK = 'REMOVE_DECK';\nexport var ADD_CARD = 'ADD_CARD';\nexport var RESET_STORE = 'RESET_STORE';\nexport function receiveDecks(decks) {\n  return {\n    type: RECEIVE_DECKS,\n    decks: decks\n  };\n}\nexport function addDeck(title) {\n  return {\n    type: ADD_DECK,\n    title: title\n  };\n}\nexport function removeDeck(id) {\n  return {\n    type: REMOVE_DECK,\n    id: id\n  };\n}\nexport function addCardToDeck(deckId, card) {\n  return {\n    type: ADD_CARD,\n    deckId: deckId,\n    card: card\n  };\n}\nexport function resetStore() {\n  return {\n    type: RESET_STORE\n  };\n}\nexport function handleInitialData() {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", getDecks().then(function (decks) {\n              console.log(\"decks\");\n              dispatch(receiveDecks(decks));\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n}\nexport var myFunction = function myFunction(_) {\n  console.log(\"I am here\");\n};","map":{"version":3,"sources":["/home/kinathan/Desktop/retribution/mobile-flashcards/actions/action.js"],"names":["getDecks","RECEIVE_DECKS","ADD_DECK","REMOVE_DECK","ADD_CARD","RESET_STORE","receiveDecks","decks","type","addDeck","title","removeDeck","id","addCardToDeck","deckId","card","resetStore","handleInitialData","dispatch","then","console","log","myFunction","_"],"mappings":";AAAA,SAASA,QAAT;AAEA,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAEP,aADD;AAELM,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,OAAT,CAAiBC,KAAjB,EAAwB;AAC7B,SAAO;AACLF,IAAAA,IAAI,EAAEN,QADD;AAELQ,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,UAAT,CAAoBC,EAApB,EAAwB;AAC7B,SAAO;AACLJ,IAAAA,IAAI,EAAEL,WADD;AAELS,IAAAA,EAAE,EAAFA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,IAA/B,EAAqC;AAC1C,SAAO;AACLP,IAAAA,IAAI,EAAEJ,QADD;AAELU,IAAAA,MAAM,EAANA,MAFK;AAGLC,IAAAA,IAAI,EAAJA;AAHK,GAAP;AAKD;AAED,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAO;AACLR,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD;AACD,OAAO,SAASY,iBAAT,GAA6B;AAClC,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEElB,QAAQ,GAAGmB,IAAX,CAAgB,UAAAZ,KAAK,EAAI;AAC9Ba,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEAH,cAAAA,QAAQ,CAACZ,YAAY,CAACC,KAAD,CAAb,CAAR;AAED,aALM,CAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AASD;AAeD,OAAO,IAAMe,UAAU,GAAG,SAAbA,UAAa,CAAAC,CAAC,EAAI;AAC7BH,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,CAFM","sourcesContent":["import { getDecks } from '../utilities/api';\n\nexport const RECEIVE_DECKS = 'RECEIVE_DECKS';\nexport const ADD_DECK = 'ADD_DECK';\nexport const REMOVE_DECK = 'REMOVE_DECK';\nexport const ADD_CARD = 'ADD_CARD';\nexport const RESET_STORE = 'RESET_STORE';\n\nexport function receiveDecks(decks) {\n  return {\n    type: RECEIVE_DECKS,\n    decks\n  };\n}\n\nexport function addDeck(title) {\n  return {\n    type: ADD_DECK,\n    title\n  };\n}\n\nexport function removeDeck(id) {\n  return {\n    type: REMOVE_DECK,\n    id\n  };\n}\n\nexport function addCardToDeck(deckId, card) {\n  return {\n    type: ADD_CARD,\n    deckId,\n    card\n  };\n}\n\nexport function resetStore() {\n  return {\n    type: RESET_STORE\n  };\n}\nexport function handleInitialData() {\n  return async(dispatch) => {\n    \n    return getDecks().then(decks => {\n      console.log(\"decks\", )\n\n      dispatch(receiveDecks(decks));\n      \n    });\n  };\n}\n\n// export const handleInitialData = () => async(dispatch) => {\n//   try {\n//     console.log(\"Handling Decks\")\n//       getDecks().then(decks => {\n//           dispatch(receiveDecks(decks))\n//       })\n//       console.log(\"Handled\")\n//   } \n//   catch(error) {\n//       console.error('Error reading decks', error);\n//   }\n// }\n\nexport const myFunction = _ => {\n  console.log(\"I am here\", )\n}"]},"metadata":{},"sourceType":"module"}