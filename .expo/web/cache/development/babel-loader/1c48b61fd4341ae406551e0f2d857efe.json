{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Deck from \"./Deck\";\nimport TouchButton from \"./TouchButton\";\nimport TextButton from \"./TextButton\";\nimport { gray, textGray, green, white, red } from \"../utilities/colors\";\nimport { connect } from 'react-redux';\nimport { removeDeck } from \"../actions/action\";\nimport { removeDeckAS } from \"../utilities/api\";\nexport var DeckDetail = function (_Component) {\n  _inherits(DeckDetail, _Component);\n\n  var _super = _createSuper(DeckDetail);\n\n  function DeckDetail() {\n    var _this;\n\n    _classCallCheck(this, DeckDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleDelete = function (id) {\n      var _this$props = _this.props,\n          removeDeck = _this$props.removeDeck,\n          navigation = _this$props.navigation;\n      removeDeck(id);\n      removeDeckAS(id);\n      navigation.goBack();\n    };\n\n    return _this;\n  }\n\n  _createClass(DeckDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var navObject = this.props.navigation.state.params;\n      console.log(\"Nav bar object here\", navObject);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return nextProps.deck !== undefined;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var deck = this.props.deck;\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Deck, {\n        id: deck.title\n      }), React.createElement(View, null, React.createElement(TouchButton, {\n        btnStyle: {\n          backgroundColor: white,\n          borderColor: textGray\n        },\n        txtStyle: {\n          color: textGray\n        },\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('AddCard', {\n            title: deck.title\n          });\n        }\n      }, \"Add Card\"), React.createElement(TouchButton, {\n        btnStyle: {\n          backgroundColor: green,\n          borderColor: white\n        },\n        txtStyle: {\n          color: white\n        },\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Quiz', {\n            title: deck.title\n          });\n        }\n      }, \"Start Quiz\")), React.createElement(TextButton, {\n        txtStyle: {\n          color: red\n        },\n        onPress: function onPress() {\n          return _this2.handleDelete(deck.title);\n        }\n      }, \"Delete Deck\"));\n    }\n  }]);\n\n  return DeckDetail;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around',\n    paddingTop: 16,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    backgroundColor: gray\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state, _ref) {\n  var navigation = _ref.navigation;\n  var title = navigation.route.params;\n  var deck = state[title];\n  return {\n    deck: deck\n  };\n};\n\nexport default connect(mapStateToProps, {\n  removeDeck: removeDeck\n})(DeckDetail);","map":{"version":3,"sources":["/home/kinathan/Desktop/retribution/mobile-flashcards/components/DeckDetail.js"],"names":["React","Component","Deck","TouchButton","TextButton","gray","textGray","green","white","red","connect","removeDeck","removeDeckAS","DeckDetail","handleDelete","id","props","navigation","goBack","navObject","state","params","console","log","nextProps","deck","undefined","styles","container","title","backgroundColor","borderColor","color","navigate","StyleSheet","create","flex","justifyContent","paddingTop","paddingLeft","paddingRight","paddingBottom","mapStateToProps","route"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Deck from './Deck';\nimport TouchButton from './TouchButton';\nimport TextButton from './TextButton';\nimport { gray, textGray, green, white, red } from '../utilities/colors';\nimport { connect } from 'react-redux';\nimport { removeDeck } from '../actions/action';\nimport { removeDeckAS } from '../utilities/api';\n\nexport class DeckDetail extends Component {\n  \n  componentDidMount(){\n    const navObject = this.props.navigation.state.params \n    console.log(\"Nav bar object here\",navObject )\n}\n  shouldComponentUpdate(nextProps) {\n    return nextProps.deck !== undefined;\n  }\n  handleDelete = id => {\n    const { removeDeck, navigation } = this.props;\n\n    removeDeck(id);\n    removeDeckAS(id);\n\n    navigation.goBack();\n  };\n  render() {\n    const { deck } = this.props;\n\n    return (\n      <View style={styles.container}>\n        <Deck id={deck.title} />\n        <View>\n          <TouchButton\n            btnStyle={{ backgroundColor: white, borderColor: textGray }}\n            txtStyle={{ color: textGray }}\n            onPress={() =>\n              this.props.navigation.navigate('AddCard', { title: deck.title })\n            }\n          >\n            Add Card\n          </TouchButton>\n          <TouchButton\n            btnStyle={{ backgroundColor: green, borderColor: white }}\n            txtStyle={{ color: white }}\n            onPress={() =>\n              this.props.navigation.navigate('Quiz', { title: deck.title })\n            }\n          >\n            Start Quiz\n          </TouchButton>\n        </View>\n        <TextButton\n          txtStyle={{ color: red }}\n          onPress={() => this.handleDelete(deck.title)}\n        >\n          Delete Deck\n        </TextButton>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around',\n    paddingTop: 16,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    backgroundColor: gray\n  }\n});\n\nconst mapStateToProps = (state, { navigation }) => {\n  const title = navigation.route.params\n  // navigation.getParam('title', 'undefined');\n  // this.props.route.params\n  const deck = state[title];\n\n  return {\n    deck\n  };\n};\n\nexport default connect(mapStateToProps,{ removeDeck })(DeckDetail);"]},"metadata":{},"sourceType":"module"}