{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport Deck from \"./Deck\";\nimport { blue, orange } from \"../utilities/colors\";\nimport { handleInitialData as _handleInitialData } from \"../actions/action\";\nexport var DeckList = function (_Component) {\n  _inherits(DeckList, _Component);\n\n  var _super = _createSuper(DeckList);\n\n  function DeckList() {\n    _classCallCheck(this, DeckList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DeckList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          decks = _this$props.decks,\n          navigation = _this$props.navigation;\n      console.log(\"We are here decks\");\n      console.log(\"My data:\", decks);\n      return React.createElement(ScrollView, {\n        style: styles.container\n      }, React.createElement(Text, {\n        style: styles.title\n      }, \"Udacity Mobile Flashcards\"), this.props.decks === null ? \"Data Is Null\" : Object.values(decks).map(function (deck) {\n        return React.createElement(TouchableOpacity, {\n          key: deck.title,\n          onPress: function onPress() {\n            return navigation.navigate('DeckDetail', {\n              title: deck.title\n            });\n          }\n        }, React.createElement(Deck, {\n          id: deck.title\n        }));\n      }), \";\", React.createElement(View, {\n        style: {\n          marginBottom: 30\n        }\n      }));\n    }\n  }]);\n\n  return DeckList;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 16,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    backgroundColor: blue\n  },\n  title: {\n    fontSize: 40,\n    textAlign: 'center',\n    marginBottom: 16,\n    color: orange\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    decks: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handleInitialData: function handleInitialData() {\n      return dispatch(_handleInitialData());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeckList);","map":{"version":3,"sources":["/home/kinathan/Desktop/retribution/mobile-flashcards/components/DeckList.js"],"names":["React","Component","connect","Deck","blue","orange","handleInitialData","DeckList","props","decks","navigation","console","log","styles","container","title","Object","values","map","deck","navigate","marginBottom","StyleSheet","create","flex","paddingTop","paddingLeft","paddingRight","paddingBottom","backgroundColor","fontSize","textAlign","color","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP;AACA,SAASC,IAAT,EAAeC,MAAf;AACA,SAASC,iBAAiB,IAAjBA,kBAAT;AAEA,WAAaC,QAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAOE,kBAAS;AACP,wBAA8B,KAAKC,KAAnC;AAAA,UAAQC,KAAR,eAAQA,KAAR;AAAA,UAAeC,UAAf,eAAeA,UAAf;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBH,KAAvB;AAEA,aACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEI,MAAM,CAACC;AAA1B,SAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE;AAApB,qCAFF,EAKE,KAAKP,KAAL,CAAWC,KAAX,KAAqB,IAArB,GAA4B,cAA5B,GAA6CO,MAAM,CAACC,MAAP,CAAcR,KAAd,EAAqBS,GAArB,CAAyB,UAAAC,IAAI,EAAI;AAE5E,eACE,oBAAC,gBAAD;AACE,UAAA,GAAG,EAAEA,IAAI,CAACJ,KADZ;AAEE,UAAA,OAAO,EAAE;AAAA,mBACPL,UAAU,CAACU,QAAX,CAAoB,YAApB,EAAkC;AAAEL,cAAAA,KAAK,EAAEI,IAAI,CAACJ;AAAd,aAAlC,CADO;AAAA;AAFX,WAME,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAEI,IAAI,CAACJ;AAAf,UANF,CADF;AAUD,OAZ4C,CAL/C,OAoBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEM,UAAAA,YAAY,EAAE;AAAhB;AAAb,QApBF,CADF;AAyBD;AAtCH;;AAAA;AAAA,EAA8BpB,SAA9B;AAyCA,IAAMY,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,WAAW,EAAE,EAHJ;AAITC,IAAAA,YAAY,EAAE,EAJL;AAKTC,IAAAA,aAAa,EAAE,EALN;AAMTC,IAAAA,eAAe,EAAEzB;AANR,GADoB;AAS/BW,EAAAA,KAAK,EAAE;AACLe,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLV,IAAAA,YAAY,EAAE,EAHT;AAILW,IAAAA,KAAK,EAAE3B;AAJF;AATwB,CAAlB,CAAf;;AAiBA,IAAM4B,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAAEzB,IAAAA,KAAK,EAAEyB;AAAT,GAAZ;AAAA,CAAxB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SACvB;AACI9B,IAAAA,iBAAiB,EAAE;AAAA,aAAM8B,QAAQ,CAAC9B,kBAAiB,EAAlB,CAAd;AAAA;AADvB,GADuB;AAAA,CAA3B;;AAMA,eAAeJ,OAAO,CAAC+B,eAAD,EAAiBE,kBAAjB,CAAP,CAA4C5B,QAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {ScrollView,View,Text,StyleSheet,TouchableOpacity} from 'react-native';\nimport { connect } from 'react-redux';\nimport Deck from './Deck';\nimport { blue, orange } from '../utilities/colors';\nimport { handleInitialData } from '../actions/action';\n\nexport class DeckList extends Component {\n  \n  // componentDidMount() {\n  //   console.log(\"Component Mounted\")\n  //   this.props.handleInitialData();\n  // }\n\n  render() {\n    const { decks, navigation } = this.props;\n\n    console.log(\"We are here decks\")\n    console.log(\"My data:\",decks)\n\n    return (\n      <ScrollView style={styles.container}>\n\n        <Text style={styles.title}>Udacity Mobile Flashcards</Text>\n\n        {\n        this.props.decks === null ? \"Data Is Null\" : Object.values(decks).map(deck => {\n\n          return (\n            <TouchableOpacity\n              key={deck.title}\n              onPress={() =>\n                navigation.navigate('DeckDetail', { title: deck.title })\n              }\n            >\n              <Deck id={deck.title} />\n            </TouchableOpacity>\n          );\n        })};\n        \n\n        <View style={{ marginBottom: 30 }} />\n\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 16,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    backgroundColor: blue\n  },\n  title: {\n    fontSize: 40,\n    textAlign: 'center',\n    marginBottom: 16,\n    color: orange\n  }\n});\n\nconst mapStateToProps = (state) => ({ decks: state });\n\nconst mapDispatchToProps = (dispatch) => (\n    {\n        handleInitialData: () => dispatch(handleInitialData()),\n    }\n)\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DeckList);"]},"metadata":{},"sourceType":"module"}