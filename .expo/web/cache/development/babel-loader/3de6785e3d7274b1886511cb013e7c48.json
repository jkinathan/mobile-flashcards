{"ast":null,"code":"import * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport DeckList from \"../components/DeckList\";\nimport AddDeck from \"../components/AddDeck\";\nimport AddCard from \"../components/AddCard\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport { TestCompo } from \"../components/TestComponent\";\nimport { orange } from \"../utilities/colors\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport DeckDetail from \"../components/DeckDetail\";\nimport StartQuiz from \"../components/Quiz\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nexport default function MainNavigation() {\n  return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n    initialRouteName: \"DeckList\"\n  }, React.createElement(Stack.Screen, {\n    name: \"DeckDetail\",\n    component: DeckDetail\n  }), React.createElement(Stack.Screen, {\n    name: \"DeckList\",\n    component: DeckList\n  }), React.createElement(Stack.Screen, {\n    name: \"Add Deck\",\n    component: AddDeck\n  }), React.createElement(Stack.Screen, {\n    name: \"AddCard\",\n    component: AddCard\n  }), React.createElement(Stack.Screen, {\n    name: \"StartQuiz\",\n    component: StartQuiz\n  })));\n}","map":{"version":3,"sources":["/home/kinathan/Desktop/retribution/mobile-flashcards/Navigations/MainNavigation.js"],"names":["React","NavigationContainer","createBottomTabNavigator","DeckList","AddDeck","AddCard","FontAwesome5","TestCompo","orange","createStackNavigator","DeckDetail","StartQuiz","Tab","Stack","MainNavigation"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAQC,QAAR;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,SAAQC,YAAR;AACA,SAASC,SAAT;AACA,SAASC,MAAT;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,UAAP;AACA,OAAOC,SAAP;AAGA,IAAMC,GAAG,GAAGV,wBAAwB,EAApC;AACA,IAAMW,KAAK,GAAGJ,oBAAoB,EAAlC;AAGA,eAAe,SAASK,cAAT,GAA0B;AACvC,SACE,oBAAC,mBAAD,QACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC;AAAlC,KAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,SAAS,EAAEJ;AAA3C,IAJF,EAKE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEP;AAAzC,IALF,EAME,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEC;AAAzC,IANF,EAOE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEC;AAAxC,IAPF,EAQE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,SAAS,EAAEM;AAA1C,IARF,CADF,CADF;AAiFD","sourcesContent":["import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport  DeckList  from '../components/DeckList';\nimport AddDeck from '../components/AddDeck';\nimport AddCard from '../components/AddCard';\nimport {FontAwesome5} from 'react-native-vector-icons';\nimport { TestCompo } from '../components/TestComponent';\nimport { orange } from '../utilities/colors';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport DeckDetail from '../components/DeckDetail';\nimport StartQuiz from '../components/Quiz';\n\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\n\nexport default function MainNavigation() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"DeckList\"\n      \n      >\n      {/* <Stack.Navigator initialRouteName=\"Home\"> */}\n        <Stack.Screen name=\"DeckDetail\" component={DeckDetail} />\n        <Stack.Screen name=\"DeckList\" component={DeckList} />\n        <Stack.Screen name=\"Add Deck\" component={AddDeck} />\n        <Stack.Screen name=\"AddCard\" component={AddCard} />\n        <Stack.Screen name=\"StartQuiz\" component={StartQuiz} />\n\n      </Stack.Navigator>\n      {/* <Tab.Navigator\n       screenOptions={\n        {\n          \"tabBarActiveTintColor\": \"#f0f\",\n          \"tabBarInactiveTintColor\": \"#555\",\n          \"tabBarActiveBackgroundColor\": \"#fff\",\n          \"tabBarInactiveBackgroundColor\": \"#999\",\n          \"tabBarStyle\": [\n            {\n              \"display\": \"flex\"\n            },\n            null\n          ]\n        },\n         (route)=>({\n            tabBarIcon: ({focused,size,color}) =>{\n              let iconName;\n              if(route.name === \"DeckList\"){\n                iconName = \"autoprefixer\";\n                size= focused ? 25 : 20; \n                color = focused ? \"#f0f\" : \"#555\"; \n              }\n              else if(route.name === \"Add Deck\"){\n                iconName = \"btc\" ;\n                size= focused ? 25 : 20; \n                color = focused ? \"#f0f\" : \"#555\";\n\n              }\n              return(\n                <FontAwesome5\n                name = {iconName}\n                size = {size}/>\n              )\n            }\n         })}\n         \n          tabBarOptions= {{\n            activeTintColor: \"#f0f\",\n            style: {\n              height: 60,\n              backgroundColor: \"#999\",\n              shadowColor: 'rgba(0,0,0, 0.24)',\n              shadowOffset: {\n                width: 0,\n                height: 3\n              },\n              shadowRadius: 6,\n              shadowOpacity: 1,\n              borderTopWidth: 1,\n              borderTopColor: orange\n            },\n            labelStyle: {\n              fontSize: 12,\n              fontWeight: 'bold'\n            },\n            tabStyle: {\n              marginTop: 5,\n              marginBottom: 3\n            },\n            showIcon: true\n          }}\n         >\n\n        <Tab.Screen name=\"DeckList\" component={DeckList} />\n        <Tab.Screen name=\"Add Deck\" component={AddDeck} />\n      </Tab.Navigator> */}\n    </NavigationContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}